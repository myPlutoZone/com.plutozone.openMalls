<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.plutozone.front.mybatis.center.Board">
	
	<select id="selectReply" parameterType="boardDto" resultType="boardDto">
		SELECT
			SEQ_BBS
			, TITLE
			, CONTENT
			, FILE_SAVE
			, FILE_ORIG
			, TO_CHAR(DT_REG, 'YYYY-MM-DD') dt_reg
		FROM
			TB_BBS
		WHERE
			CD_BBS_TYPE			= #{cd_bbs_type}
			AND SEQ_BBS_PARENT	= #{seq_bbs}
	</select>
	
	<select id="count" parameterType="pagingDto" resultType="java.lang.Integer">
		SELECT
			COUNT(ROWNUM)
		FROM
			TB_BBS
		WHERE
			<include refid="where" />
	</select>
	
	<select id="list" parameterType="pagingDto" resultType="boardDto">
		SELECT
			*
		FROM
			(
			SELECT
				/*+ first_rows(10) */ ROW_NUMBER() OVER (ORDER BY FLG_TOP, FLG_REPLY DESC, DT_REG DESC) rnum
				, SEQ_BBS
				, (SELECT tb_reply.SEQ_BBS FROM TB_BBS tb_reply WHERE tb_reply.SEQ_BBS_PARENT = TB_BBS.SEQ_BBS) seq_reply
				, DECODE(CD_CTG, 1, '가입탈퇴', 2, '상품', 3, '구매', 4, '결제', 5, '배송', 6, '환불', 9, '기타', '미정') CTG_NM
				, TITLE
				, FILE_ORIG
				, DECODE(LOWER(SUBSTR(FILE_ORIG, INSTR(FILE_ORIG, '.', -1, 1) + 1))
					, 'xlsx', 'xls'
					, 'xls'	, 'xls'
					, 'docx', 'doc'
					, 'doc'	, 'doc'
					, 'pptx', 'ppt'
					, 'ppt'	, 'ppt'
					, 'hwp'	, 'hwp'
					, 'pdf'	, 'pdf'
					, NULL	, ''
					, 'etc') extension
				, FLG_TOP
				, TO_CHAR(DT_REG, 'YYYY-MM-DD') dt_reg
				, READED
			FROM
				TB_BBS
			WHERE
				<include refid="where" />
			)
		<![CDATA[
		WHERE
			rnum >= (${currentPage} - 1) * ${linePerPage} + 1 AND rnum <= ${currentPage} * ${linePerPage}
		]]> 
		ORDER BY
			FLG_TOP, rnum
	</select>
	
	<sql id="where">
			CD_BBS_TYPE = #{cd_bbs_type}
			AND FLG_DELETE IS NULL
			<if test="searchWord != null and searchWord != ''">
				<if test="searchKey == 'title'">
					AND TITLE LIKE '%' || #{searchWord} || '%'
				</if>
				<if test="searchKey == 'contents'">
					AND CONTENT LIKE '%' || #{searchWord} || '%'
				</if>
				<if test="searchKey == 'title+contents'">
					AND (TITLE LIKE '%' || #{searchWord} || '%' OR CONTENT LIKE '%' || #{searchWord} || '%')
				</if>
			</if>
			<if test="cd_ctg != 0">
				AND CD_CTG = #{cd_ctg}
			</if>
			<if test="cd_bbs_type == 3">
				AND SEQ_BBS_PARENT IS NULL
				AND REGISTER = #{register}
			</if>
	</sql>
	
	<update id="deleteFlag" parameterType="boardDto">
		UPDATE
			TB_BBS
		SET
			FLG_DELETE	= 'Y'
			, DT_UPT	= SYSDATE
			, UPDATER	= #{updater}
		WHERE
			CD_BBS_TYPE = #{cd_bbs_type}
			AND SEQ_BBS = #{seq_bbs}
	</update>
	
	<delete id="delete" parameterType="boardDto">
		DELETE FROM
			TB_BBS
		WHERE
			CD_BBS_TYPE = #{cd_bbs_type}
			AND SEQ_BBS = #{seq_bbs}
	</delete>
	
	<insert id="insert" parameterType="boardDto">
		INSERT INTO TB_BBS
			(SEQ_BBS, CD_BBS_TYPE, TITLE, CD_CTG, CONTENT, FILE_SAVE, FILE_ORIG, READED, DT_REG, REGISTER)
		VALUES
			(#{seq_bbs}, #{cd_bbs_type}, #{title}, #{cd_ctg}, #{content}, #{file_save}, #{file_orig}, 0, SYSDATE, #{register})
	</insert>
	
	<update id="update" parameterType="boardDto">
		UPDATE
			TB_BBS
		SET
			TITLE		= #{title}
			, CD_CTG	= #{cd_ctg}
			, CONTENT	= #{content}
			, DT_UPT	= SYSDATE
			, UPDATER	= #{updater}
		WHERE
			SEQ_BBS = #{seq_bbs}
	</update>
	
	<select id="select" parameterType="boardDto" resultType="boardDto">
		SELECT
			SEQ_BBS
			, TITLE
			, (SELECT tb_reply.SEQ_BBS FROM TB_BBS tb_reply WHERE tb_reply.SEQ_BBS_PARENT = TB_BBS.SEQ_BBS) seq_reply
			, CD_CTG
			, CONTENT
			, FILE_SAVE
			, FILE_ORIG
			, TO_CHAR(DT_REG, 'YYYY-MM-DD') dt_reg
		FROM
			TB_BBS
		WHERE
			CD_BBS_TYPE		= #{cd_bbs_type}
			AND SEQ_BBS		= #{seq_bbs}
			
	</select>
	
	<select id="sequence" resultType="java.lang.Integer">
		SELECT SQ_SEQ_BBS.NEXTVAL FROM DUAL
	</select>
	
</mapper>